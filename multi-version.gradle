// pre-processor for MultiVersion
interface InjExOps {
    @Inject
    ExecOperations getExecOps()
}

tasks.register("preprocessMultiVersion") {
    def inj = project.objects.newInstance(InjExOps)
    doLast {
        delete "prep"
        copy {
            from "src"
            into "prep"
        }
        fileTree("prep") each { file ->
            inj.execOps.exec {
                commandLine "node", "./MultiVersion/preprocess.js", file
            }
        }
        inj.execOps.exec {
            commandLine "node", "./MultiVersion/finalize.js"
        }

        sourceSets.client.java.srcDirs = ["prep/main/java"]
    }
}

tasks.register("cleanupMultiVersion") {
    doLast {
        sourceSets.client.java.srcDirs = ["src/main/java"]
    }
}

compileJava {
    dependsOn preprocessMultiVersion
    finalizedBy cleanupMultiVersion
}
